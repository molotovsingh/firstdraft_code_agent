## Summary

Successfully added 3 pytest tests that require no external services and validate:

1. **test_presign_download.py**: Tests GET /v0/uploads/presign_download endpoint
   - Returns 200 with a URL when provided a valid key
   - Uses DummyStorage that returns fixed URLs without external dependencies
   - Validates expiry bounds (3600 seconds)

2. **test_reprocess.py**: Tests POST /v0/documents/{document_id}/reprocess endpoint
   - Creates a new version and enqueues a job
   - Uses in-memory DB stub with proper mocking patterns
   - Returns 200 with fields {document_id, new_version, job_id}

3. **test_credits_summary.py**: Tests GET /v0/credits/summary endpoint
   - Aggregates totals and pending_estimates correctly
   - Uses dummy DB with mixed entries (estimates, reversals, actuals)
   - Correctly calculates total (-625), pending_estimates (-550), and actual_usage (-75)

### Changes Made:
- Added 2 new API endpoints to `apps/block0_api/main.py`:
  - `/v0/uploads/presign_download` for presigned download URLs
  - `/v0/credits/summary` for credit aggregation
- Added startup check to skip initialization in test environment
- Created 3 new test files under `tests/` directory
- All tests run without Redis, Postgres, or MinIO dependencies
- Test runtime is < 1 second (0.73s)
- All tests pass (3 passed, 0 failed)

### Next Suggested Tests:
1. **Authentication/Authorization tests**: Validate JWT token validation and user permissions
2. **Error handling tests**: Test 404, 409, and 500 error responses for edge cases
3. **Upload endpoint tests**: Mock file uploads with various MIME types
4. **Batch operations tests**: Test bulk document processing endpoints
5. **Webhook/callback tests**: Validate async job completion notifications
