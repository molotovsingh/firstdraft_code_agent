version: "3.9"
services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: firstdraft
      POSTGRES_PASSWORD: firstdraft
      POSTGRES_DB: firstdraft_system
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U firstdraft"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:RELEASE.2024-06-13T22-53-53Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"

  create-bucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: ["/bin/sh","-c"]
    command: >-
      "mc alias set local http://minio:9000 minioadmin minioadmin &&
       mc mb -p local/firstdraft-dev || true"

  api:
    build:
      context: ..
      dockerfile: infra/dockerfiles/Dockerfile.api
    env_file:
      - ../.env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
      create-bucket:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
    command: ["uvicorn", "apps.block0_api.main:app", "--host", "0.0.0.0", "--port", "8000"]

  worker:
    build:
      context: ..
      dockerfile: infra/dockerfiles/Dockerfile.worker
    env_file:
      - ../.env
    environment:
      - PYTHONUNBUFFERED=1
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      minio:
        condition: service_started
    command: ["celery", "-A", "apps.block0_worker.worker:celery_app", "worker", "--loglevel=INFO"]

networks:
  default:
    name: firstdraft_net
